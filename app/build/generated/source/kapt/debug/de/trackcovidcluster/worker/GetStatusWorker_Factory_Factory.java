// Generated by Dagger (https://dagger.dev).
package de.trackcovidcluster.worker;

import dagger.internal.Factory;
import de.trackcovidcluster.source.IStatusStorageSource;
import de.trackcovidcluster.source.IUserStorageSource;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetStatusWorker_Factory_Factory implements Factory<GetStatusWorker.Factory> {
  private final Provider<IUserStorageSource> mUserStorageSourceProvider;

  private final Provider<IStatusStorageSource> mStatusStorageSourceProvider;

  public GetStatusWorker_Factory_Factory(Provider<IUserStorageSource> mUserStorageSourceProvider,
      Provider<IStatusStorageSource> mStatusStorageSourceProvider) {
    this.mUserStorageSourceProvider = mUserStorageSourceProvider;
    this.mStatusStorageSourceProvider = mStatusStorageSourceProvider;
  }

  @Override
  public GetStatusWorker.Factory get() {
    return newInstance(mUserStorageSourceProvider.get(), mStatusStorageSourceProvider.get());
  }

  public static GetStatusWorker_Factory_Factory create(
      Provider<IUserStorageSource> mUserStorageSourceProvider,
      Provider<IStatusStorageSource> mStatusStorageSourceProvider) {
    return new GetStatusWorker_Factory_Factory(mUserStorageSourceProvider, mStatusStorageSourceProvider);
  }

  public static GetStatusWorker.Factory newInstance(IUserStorageSource mUserStorageSource,
      IStatusStorageSource mStatusStorageSource) {
    return new GetStatusWorker.Factory(mUserStorageSource, mStatusStorageSource);
  }
}
