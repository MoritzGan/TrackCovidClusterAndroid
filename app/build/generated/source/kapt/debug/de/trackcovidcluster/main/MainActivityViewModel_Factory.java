// Generated by Dagger (https://google.github.io/dagger).
package de.trackcovidcluster.main;

import dagger.internal.Factory;
import de.trackcovidcluster.source.UserStorageSource;
import javax.inject.Provider;

public final class MainActivityViewModel_Factory implements Factory<MainActivityViewModel> {
  private final Provider<UserStorageSource> mUserStorageSourceProvider;

  public MainActivityViewModel_Factory(Provider<UserStorageSource> mUserStorageSourceProvider) {
    this.mUserStorageSourceProvider = mUserStorageSourceProvider;
  }

  @Override
  public MainActivityViewModel get() {
    return provideInstance(mUserStorageSourceProvider);
  }

  public static MainActivityViewModel provideInstance(
      Provider<UserStorageSource> mUserStorageSourceProvider) {
    return new MainActivityViewModel(mUserStorageSourceProvider.get());
  }

  public static MainActivityViewModel_Factory create(
      Provider<UserStorageSource> mUserStorageSourceProvider) {
    return new MainActivityViewModel_Factory(mUserStorageSourceProvider);
  }

  public static MainActivityViewModel newMainActivityViewModel(
      UserStorageSource mUserStorageSource) {
    return new MainActivityViewModel(mUserStorageSource);
  }
}
