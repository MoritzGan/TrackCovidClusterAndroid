// Generated by Dagger (https://google.github.io/dagger).
package de.trackcovidcluster.status;

import dagger.internal.Factory;
import de.trackcovidcluster.source.IStatusStorageSource;
import de.trackcovidcluster.source.IUserStorageSource;
import javax.inject.Provider;

public final class StatusViewModel_Factory implements Factory<StatusViewModel> {
  private final Provider<IStatusStorageSource> mStatusStorageSourceProvider;

  private final Provider<IUserStorageSource> mUserStorageSourceProvider;

  public StatusViewModel_Factory(
      Provider<IStatusStorageSource> mStatusStorageSourceProvider,
      Provider<IUserStorageSource> mUserStorageSourceProvider) {
    this.mStatusStorageSourceProvider = mStatusStorageSourceProvider;
    this.mUserStorageSourceProvider = mUserStorageSourceProvider;
  }

  @Override
  public StatusViewModel get() {
    return provideInstance(mStatusStorageSourceProvider, mUserStorageSourceProvider);
  }

  public static StatusViewModel provideInstance(
      Provider<IStatusStorageSource> mStatusStorageSourceProvider,
      Provider<IUserStorageSource> mUserStorageSourceProvider) {
    return new StatusViewModel(
        mStatusStorageSourceProvider.get(), mUserStorageSourceProvider.get());
  }

  public static StatusViewModel_Factory create(
      Provider<IStatusStorageSource> mStatusStorageSourceProvider,
      Provider<IUserStorageSource> mUserStorageSourceProvider) {
    return new StatusViewModel_Factory(mStatusStorageSourceProvider, mUserStorageSourceProvider);
  }

  public static StatusViewModel newStatusViewModel(
      IStatusStorageSource mStatusStorageSource, IUserStorageSource mUserStorageSource) {
    return new StatusViewModel(mStatusStorageSource, mUserStorageSource);
  }
}
