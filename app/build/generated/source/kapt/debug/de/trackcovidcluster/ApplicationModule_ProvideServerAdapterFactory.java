// Generated by Dagger (https://google.github.io/dagger).
package de.trackcovidcluster;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import de.trackcovidcluster.server.ServerAdapter;

public final class ApplicationModule_ProvideServerAdapterFactory implements Factory<ServerAdapter> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideServerAdapterFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public ServerAdapter get() {
    return provideInstance(module);
  }

  public static ServerAdapter provideInstance(ApplicationModule module) {
    return proxyProvideServerAdapter(module);
  }

  public static ApplicationModule_ProvideServerAdapterFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideServerAdapterFactory(module);
  }

  public static ServerAdapter proxyProvideServerAdapter(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideServerAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
