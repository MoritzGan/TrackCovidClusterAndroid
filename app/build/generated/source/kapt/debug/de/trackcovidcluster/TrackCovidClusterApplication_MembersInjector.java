// Generated by Dagger (https://dagger.dev).
package de.trackcovidcluster;

import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.InjectedFieldSignature;
import de.trackcovidcluster.di.RxWorkerFactory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TrackCovidClusterApplication_MembersInjector implements MembersInjector<TrackCovidClusterApplication> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<RxWorkerFactory> mRxWorkerFactoryProvider;

  public TrackCovidClusterApplication_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<RxWorkerFactory> mRxWorkerFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.mRxWorkerFactoryProvider = mRxWorkerFactoryProvider;
  }

  public static MembersInjector<TrackCovidClusterApplication> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<RxWorkerFactory> mRxWorkerFactoryProvider) {
    return new TrackCovidClusterApplication_MembersInjector(androidInjectorProvider, mRxWorkerFactoryProvider);}

  @Override
  public void injectMembers(TrackCovidClusterApplication instance) {
    injectAndroidInjector(instance, androidInjectorProvider.get());
    injectMRxWorkerFactory(instance, mRxWorkerFactoryProvider.get());
  }

  @InjectedFieldSignature("de.trackcovidcluster.TrackCovidClusterApplication.androidInjector")
  public static void injectAndroidInjector(TrackCovidClusterApplication instance,
      DispatchingAndroidInjector<Object> androidInjector) {
    instance.androidInjector = androidInjector;
  }

  @InjectedFieldSignature("de.trackcovidcluster.TrackCovidClusterApplication.mRxWorkerFactory")
  public static void injectMRxWorkerFactory(TrackCovidClusterApplication instance,
      RxWorkerFactory mRxWorkerFactory) {
    instance.mRxWorkerFactory = mRxWorkerFactory;
  }
}
