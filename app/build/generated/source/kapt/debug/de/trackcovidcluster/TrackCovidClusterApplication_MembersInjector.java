// Generated by Dagger (https://google.github.io/dagger).
package de.trackcovidcluster;

import android.app.Activity;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import de.trackcovidcluster.di.RxWorkerFactory;
import javax.inject.Provider;

public final class TrackCovidClusterApplication_MembersInjector
    implements MembersInjector<TrackCovidClusterApplication> {
  private final Provider<DispatchingAndroidInjector<Activity>> activityInjectorProvider;

  private final Provider<RxWorkerFactory> mRxWorkerFactoryProvider;

  public TrackCovidClusterApplication_MembersInjector(
      Provider<DispatchingAndroidInjector<Activity>> activityInjectorProvider,
      Provider<RxWorkerFactory> mRxWorkerFactoryProvider) {
    this.activityInjectorProvider = activityInjectorProvider;
    this.mRxWorkerFactoryProvider = mRxWorkerFactoryProvider;
  }

  public static MembersInjector<TrackCovidClusterApplication> create(
      Provider<DispatchingAndroidInjector<Activity>> activityInjectorProvider,
      Provider<RxWorkerFactory> mRxWorkerFactoryProvider) {
    return new TrackCovidClusterApplication_MembersInjector(
        activityInjectorProvider, mRxWorkerFactoryProvider);
  }

  @Override
  public void injectMembers(TrackCovidClusterApplication instance) {
    injectActivityInjector(instance, activityInjectorProvider.get());
    injectMRxWorkerFactory(instance, mRxWorkerFactoryProvider.get());
  }

  public static void injectActivityInjector(
      TrackCovidClusterApplication instance,
      DispatchingAndroidInjector<Activity> activityInjector) {
    instance.activityInjector = activityInjector;
  }

  public static void injectMRxWorkerFactory(
      TrackCovidClusterApplication instance, RxWorkerFactory mRxWorkerFactory) {
    instance.mRxWorkerFactory = mRxWorkerFactory;
  }
}
