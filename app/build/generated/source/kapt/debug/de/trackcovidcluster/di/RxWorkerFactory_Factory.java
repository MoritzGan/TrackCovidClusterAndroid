// Generated by Dagger (https://google.github.io/dagger).
package de.trackcovidcluster.di;

import androidx.work.ListenableWorker;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

public final class RxWorkerFactory_Factory implements Factory<RxWorkerFactory> {
  private final Provider<Map<Class<? extends ListenableWorker>, Provider<IChildRxWorkerFactory>>>
      workersFactoriesProvider;

  public RxWorkerFactory_Factory(
      Provider<Map<Class<? extends ListenableWorker>, Provider<IChildRxWorkerFactory>>>
          workersFactoriesProvider) {
    this.workersFactoriesProvider = workersFactoriesProvider;
  }

  @Override
  public RxWorkerFactory get() {
    return provideInstance(workersFactoriesProvider);
  }

  public static RxWorkerFactory provideInstance(
      Provider<Map<Class<? extends ListenableWorker>, Provider<IChildRxWorkerFactory>>>
          workersFactoriesProvider) {
    return new RxWorkerFactory(workersFactoriesProvider.get());
  }

  public static RxWorkerFactory_Factory create(
      Provider<Map<Class<? extends ListenableWorker>, Provider<IChildRxWorkerFactory>>>
          workersFactoriesProvider) {
    return new RxWorkerFactory_Factory(workersFactoriesProvider);
  }

  public static RxWorkerFactory newRxWorkerFactory(
      Map<Class<? extends ListenableWorker>, Provider<IChildRxWorkerFactory>> workersFactories) {
    return new RxWorkerFactory(workersFactories);
  }
}
